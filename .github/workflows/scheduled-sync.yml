name: Scheduled Confluence Sync

on:
  schedule:
    # ÊØéÊó•ÂçàÂâç2ÊôÇÔºàJSTÔºâ = UTC 17:00
    - cron: '0 17 * * *'
  
  # ÊâãÂãïÂÆüË°å„ÇÇÂèØËÉΩ
  workflow_dispatch:
    inputs:
      sync_type:
        description: 'Sync type (differential or full)'
        required: true
        default: 'differential'
        type: choice
        options:
          - differential
          - full

jobs:
  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Download existing data from Cloud Storage
        run: |
          echo "üì• Downloading existing data..."
          npm run download:production-data || echo "‚ö†Ô∏è  No existing data found, will create new"
      
      - name: Run differential sync
        if: github.event.inputs.sync_type != 'full'
        env:
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_BASE_URL: https://giginc.atlassian.net
          CONFLUENCE_USER_EMAIL: kanri@jukust.jp
          CONFLUENCE_SPACE_KEY: CLIENTTOMO
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_CLOUD_PROJECT: confluence-copilot-ppjye
        run: |
          echo "üîÑ Running differential sync..."
          npm run sync:confluence:differential
      
      - name: Run full sync
        if: github.event.inputs.sync_type == 'full'
        env:
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_BASE_URL: https://giginc.atlassian.net
          CONFLUENCE_USER_EMAIL: kanri@jukust.jp
          CONFLUENCE_SPACE_KEY: CLIENTTOMO
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_CLOUD_PROJECT: confluence-copilot-ppjye
        run: |
          echo "üîÑ Running full sync..."
          npm run sync:confluence:batch
      
      - name: Upload to Cloud Storage
        env:
          GOOGLE_CLOUD_PROJECT: confluence-copilot-ppjye
          STORAGE_BUCKET: confluence-copilot-data
        run: |
          echo "üì§ Uploading data to Cloud Storage..."
          npm run upload:production-data
      
      - name: Create sync report
        if: always()
        run: |
          echo "üìä Sync Report" > sync-report.txt
          echo "Timestamp: $(date -u)" >> sync-report.txt
          echo "Sync Type: ${{ github.event.inputs.sync_type || 'differential' }}" >> sync-report.txt
          echo "Status: ${{ job.status }}" >> sync-report.txt
          
          if [ -f ".lancedb/confluence.lance/_versions.json" ]; then
            echo "LanceDB Stats:" >> sync-report.txt
            wc -c .lancedb/confluence.lance/_versions.json >> sync-report.txt
          fi
      
      - name: Upload sync report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-report-${{ github.run_number }}
          path: sync-report.txt
          retention-days: 30
      
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Sync completed successfully at $(date)"
          echo "üîó Run ID: ${{ github.run_id }}"
          echo "üìä Workflow: ${{ github.workflow }}"
      
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString();
            const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Scheduled Confluence sync failed - ${date}`,
              body: `## Sync Failure Report
              
              **Date**: ${date}
              **Workflow**: ${{ github.workflow }}
              **Run ID**: ${{ github.run_id }}
              **Sync Type**: ${{ github.event.inputs.sync_type || 'differential' }}
              
              ### Details
              The scheduled Confluence synchronization has failed.
              
              ### Action Required
              1. Check the [workflow logs](${runUrl}) for error details
              2. Verify Confluence API token validity
              3. Check network connectivity and API rate limits
              4. Review recent changes to sync scripts
              
              ### Workflow Run
              [View detailed logs ‚Üí](${runUrl})
              
              ---
              *This issue was automatically created by GitHub Actions*`,
              labels: ['sync-failure', 'automated', 'high-priority']
            });

# ÊØéÈÄ±Êó•ÊõúÊó•„Å´ÂÆåÂÖ®ÂêåÊúü„ÇíÂÆüË°å
  weekly-full-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    if: github.event.schedule == '0 18 * * 0'  # Êó•ÊõúÊó•„ÅÆ„Åø
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Run full sync
        env:
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_BASE_URL: https://giginc.atlassian.net
          CONFLUENCE_USER_EMAIL: kanri@jukust.jp
          CONFLUENCE_SPACE_KEY: CLIENTTOMO
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GOOGLE_CLOUD_PROJECT: confluence-copilot-ppjye
        run: |
          echo "üîÑ Running weekly full sync..."
          npm run sync:confluence:batch
      
      - name: Upload to Cloud Storage
        env:
          GOOGLE_CLOUD_PROJECT: confluence-copilot-ppjye
          STORAGE_BUCKET: confluence-copilot-data
        run: |
          npm run upload:production-data
      
      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Weekly full sync completed successfully"

