/**
 * ÂÖ®„Ç≠„É£„ÉÉ„Ç∑„É•„Çí„ÇØ„É™„Ç¢
 */

import * as fs from 'fs';
import * as path from 'path';

const CACHE_PATHS = [
  '.cache/lunr-index.json',
  '.cache/embeddings-cache.json',
  '.cache/search-cache.json',
  // ËøΩÂä†„ÅÆÂèØËÉΩÊÄß„ÅÆ„ÅÇ„Çã„Ç≠„É£„ÉÉ„Ç∑„É•„Éï„Ç°„Ç§„É´
];

async function clearAllCaches() {
  console.log('üßπ ÂÖ®„Ç≠„É£„ÉÉ„Ç∑„É•„ÇØ„É™„Ç¢ÈñãÂßã\n');
  
  let cleared = 0;
  let notFound = 0;
  
  for (const cachePath of CACHE_PATHS) {
    const fullPath = path.join(process.cwd(), cachePath);
    
    if (fs.existsSync(fullPath)) {
      try {
        fs.unlinkSync(fullPath);
        console.log(`‚úÖ ÂâäÈô§: ${cachePath}`);
        cleared++;
      } catch (error: any) {
        console.error(`‚ùå ÂâäÈô§Â§±Êïó: ${cachePath} - ${error.message}`);
      }
    } else {
      console.log(`‚ö†Ô∏è  Â≠òÂú®„Åó„Å™„ÅÑ: ${cachePath}`);
      notFound++;
    }
  }
  
  console.log('\n' + '='.repeat(80));
  console.log(`üìä ÁµêÊûú: ${cleared}‰ª∂ÂâäÈô§, ${notFound}‰ª∂Â≠òÂú®„Åõ„Åö`);
  console.log('='.repeat(80));
  console.log('\n‚úÖ „Ç≠„É£„ÉÉ„Ç∑„É•„ÇØ„É™„Ç¢ÂÆå‰∫Ü\n');
  
  // „É°„É¢„É™ÂÜÖ„Ç≠„É£„ÉÉ„Ç∑„É•„ÇÇ„ÇØ„É™„Ç¢„Åô„Çã„Åü„ÇÅ„ÄÅ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÂÜçËµ∑Âãï„ÇíÊé®Â•®
  console.log('üí° „Éí„É≥„Éà: „Çµ„Éº„Éê„Éº„ÇíÂÜçËµ∑Âãï„Åó„Å¶„É°„É¢„É™ÂÜÖ„Ç≠„É£„ÉÉ„Ç∑„É•„ÇÇ„ÇØ„É™„Ç¢„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
}

clearAllCaches().catch(error => {
  console.error('‚ùå „Ç®„É©„Éº:', error);
  process.exit(1);
});









