/**
 * KG„ÅÆÂÖ®‰ΩìÁöÑ„Å™Áä∂ÊÖã„ÇíÁ¢∫Ë™ç
 */

import { KGStorageService } from '../src/lib/kg-storage-service';

async function checkKGStatus() {
  console.log('\nüîç KG„ÅÆÂÖ®‰ΩìÁä∂ÊÖã„ÇíÁ¢∫Ë™ç\n');
  
  const kgStorage = new KGStorageService();
  
  // ÂÖ®„Éé„Éº„ÉâÂèñÂæó
  const stats = await kgStorage.getStats();
  console.log('üìä KGÁµ±Ë®àÊÉÖÂ†±:');
  console.log(`  „Éé„Éº„ÉâÊï∞: ${stats.nodeCount}`);
  console.log(`  „Ç®„ÉÉ„Ç∏Êï∞: ${stats.edgeCount}\n`);
  
  // „Çµ„É≥„Éó„É´„Éé„Éº„Éâ„ÇíÂèñÂæó
  console.log('üìã „Çµ„É≥„Éó„É´„Éé„Éº„ÉâÔºàÊúÄÂàù„ÅÆ10‰ª∂Ôºâ:\n');
  
  // Firestore„Åã„ÇâÁõ¥Êé•„Éé„Éº„Éâ„ÇíÂèñÂæó
  const { getApp, getApps } = await import('firebase-admin/app');
  const { getFirestore } = await import('firebase-admin/firestore');
  
  // Êó¢Â≠ò„ÅÆ„Ç¢„Éó„É™„Çí‰ΩøÁî®
  const app = getApps().length > 0 ? getApp() : (() => {
    throw new Error('Firebase app not initialized');
  })();
  
  const db = getFirestore(app);
  
  // „Éé„Éº„Éâ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥Á¢∫Ë™ç
  const nodesSnapshot = await db.collection('knowledge_graph_nodes').limit(10).get();
  
  if (nodesSnapshot.empty) {
    console.log('‚ùå „Éé„Éº„Éâ„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„ÇìÔºÅ\n');
  } else {
    nodesSnapshot.forEach((doc, idx) => {
      const data = doc.data();
      console.log(`${idx + 1}. ID: ${doc.id}`);
      console.log(`   „Çø„Ç§„Éà„É´: ${data.title || 'N/A'}`);
      console.log(`   pageId: ${data.pageId || 'N/A'}`);
      console.log(`   „Çø„Ç§„Éó: ${data.type || 'N/A'}\n`);
    });
  }
  
  // „Ç®„ÉÉ„Ç∏„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥Á¢∫Ë™ç
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  console.log('üìã „Çµ„É≥„Éó„É´„Ç®„ÉÉ„Ç∏ÔºàÊúÄÂàù„ÅÆ10‰ª∂Ôºâ:\n');
  
  const edgesSnapshot = await db.collection('knowledge_graph_edges').limit(10).get();
  
  if (edgesSnapshot.empty) {
    console.log('‚ùå „Ç®„ÉÉ„Ç∏„ÅåÂ≠òÂú®„Åó„Åæ„Åõ„ÇìÔºÅ\n');
  } else {
    edgesSnapshot.forEach((doc, idx) => {
      const data = doc.data();
      console.log(`${idx + 1}. ${data.source || 'N/A'} ‚Üí ${data.target || 'N/A'}`);
      console.log(`   „Çø„Ç§„Éó: ${data.type || 'N/A'}, Èáç„Åø: ${data.weight || 'N/A'}\n`);
    });
  }
  
  // ÁâπÂÆö„ÅÆ„Éö„Éº„Ç∏IDÔºà164, 177Ôºâ„ÇíÊ§úÁ¥¢
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  console.log('üîç 164„Å®177„ÇíÂê´„ÇÄ„Éé„Éº„Éâ„ÇíÊ§úÁ¥¢:\n');
  
  const searchIds = ['164', '168', '177', '718373062', '704053518', '804094117'];
  
  for (const id of searchIds) {
    const nodeDoc = await db.collection('knowledge_graph_nodes').doc(id).get();
    if (nodeDoc.exists) {
      const data = nodeDoc.data();
      console.log(`‚úÖ „Éé„Éº„Éâ "${id}" „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü`);
      console.log(`   „Çø„Ç§„Éà„É´: ${data?.title || 'N/A'}`);
      console.log(`   pageId: ${data?.pageId || 'N/A'}\n`);
    }
  }
  
  // „Çø„Ç§„Éà„É´„ÅßÊ§úÁ¥¢
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
  console.log('üîç „Çø„Ç§„Éà„É´„Å´ "164" „Åæ„Åü„ÅØ "ÊïôÂÆ§ÂâäÈô§" „ÇíÂê´„ÇÄ„Éé„Éº„Éâ„ÇíÊ§úÁ¥¢:\n');
  
  const titleQuery = await db.collection('knowledge_graph_nodes')
    .where('title', '>=', '164')
    .where('title', '<=', '164\uf8ff')
    .limit(5)
    .get();
  
  if (titleQuery.empty) {
    console.log('‚ùå „Çø„Ç§„Éà„É´„Å´ "164" „ÇíÂê´„ÇÄ„Éé„Éº„Éâ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì\n');
  } else {
    titleQuery.forEach((doc, idx) => {
      const data = doc.data();
      console.log(`${idx + 1}. ID: ${doc.id}, „Çø„Ç§„Éà„É´: ${data.title}\n`);
    });
  }
  
  process.exit(0);
}

checkKGStatus().catch(error => {
  console.error('\n‚ùå „Ç®„É©„Éº:', error);
  process.exit(1);
});
