import 'dotenv/config';
import * as path from 'path';
import * as lancedb from '@lancedb/lancedb';
import { defaultLanceDBSearchClient } from '../lib/lancedb-search-client';

async function testLoginSearch() {
  try {
    console.log('=== „É≠„Ç∞„Ç§„É≥Ê©üËÉΩ„ÅÆÊ§úÁ¥¢„ÉÜ„Çπ„Éà ===');
    
    // LanceDB„Å´Áõ¥Êé•Êé•Á∂ö„Åó„Å¶„Éö„Éº„Ç∏ID 703889475„ÅÆË©≥Á¥∞„ÇíÁ¢∫Ë™ç
    const dbPath = path.resolve(process.cwd(), '.lancedb');
    const tableName = 'confluence';
    const db = await lancedb.connect(dbPath);
    const tbl = await db.openTable(tableName);
    
    console.log('\n1. „Éö„Éº„Ç∏ID 703889475„ÅÆË©≥Á¥∞Á¢∫Ë™ç:');
    const pageResults = await tbl.query()
      .where(`"pageId" = '703889475'`)
      .toArray();
    
    console.log(`Ë¶ã„Å§„Åã„Å£„Åü„É¨„Ç≥„Éº„ÉâÊï∞: ${pageResults.length}`);
    pageResults.forEach((r, i) => {
      console.log(`  ${i+1}. „Çø„Ç§„Éà„É´: ${r.title}`);
      console.log(`     „É©„Éô„É´: ${JSON.stringify(r.labels)}`);
      console.log(`     „Ç≥„É≥„ÉÜ„É≥„ÉÑÈï∑: ${r.content?.length || 0} ÊñáÂ≠ó`);
      console.log(`     Âüã„ÇÅËæº„Åø„Éô„ÇØ„Éà„É´Èï∑: ${r.vector?.length || 0}`);
      console.log(`     URL: ${r.url}`);
    });
    
    // Ê§úÁ¥¢„ÇØ„Ç®„É™„Çí„ÉÜ„Çπ„Éà
    const testQueries = [
      '„É≠„Ç∞„Ç§„É≥Ê©üËÉΩ„ÅÆË©≥Á¥∞„ÅØ',
      '„É≠„Ç∞„Ç§„É≥',
      '‰ºöÂì°„É≠„Ç∞„Ç§„É≥',
      '„É≠„Ç∞„Ç¢„Ç¶„ÉàÊ©üËÉΩ',
      'Ë™çË®º',
      'authentication'
    ];
    
    console.log('\n2. Ê§úÁ¥¢„ÇØ„Ç®„É™„ÅÆ„ÉÜ„Çπ„Éà:');
    for (const query of testQueries) {
      console.log(`\n--- „ÇØ„Ç®„É™: "${query}" ---`);
      
      try {
        const searchResults = await defaultLanceDBSearchClient.search({
          query: query,
          topK: 5,
          tableName: 'confluence',
          labelFilters: {
            includeMeetingNotes: false,
            includeArchived: false
          }
        });
        
        console.log(`ÁµêÊûúÊï∞: ${searchResults.length}`);
        searchResults.forEach((r, i) => {
          const isTargetPage = r.pageId === '703889475';
          console.log(`  ${i+1}. ${isTargetPage ? 'üéØ' : '  '} ${r.title} (pageId: ${r.pageId}, distance: ${r.distance?.toFixed(3)})`);
        });
        
        // „Éö„Éº„Ç∏ID 703889475„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        const hasTargetPage = searchResults.some(r => r.pageId === '703889475');
        console.log(`„Éö„Éº„Ç∏ID 703889475„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Çã: ${hasTargetPage ? '‚úÖ' : '‚ùå'}`);
        
      } catch (searchError) {
        console.log(`Ê§úÁ¥¢„Ç®„É©„Éº: ${searchError.message}`);
      }
    }
    
    // Âüã„ÇÅËæº„Åø„Éô„ÇØ„Éà„É´„ÅÆÂìÅË≥™„Çí„ÉÅ„Çß„ÉÉ„ÇØ
    console.log('\n3. Âüã„ÇÅËæº„Åø„Éô„ÇØ„Éà„É´„ÅÆÂìÅË≥™„ÉÅ„Çß„ÉÉ„ÇØ:');
    const targetRecord = pageResults[0];
    if (targetRecord && targetRecord.vector) {
      const vector = targetRecord.vector;
      console.log(`„Éô„ÇØ„Éà„É´Ê¨°ÂÖÉÊï∞: ${vector.length}`);
      console.log(`„Éô„ÇØ„Éà„É´„ÅÆÂÄ§„ÅÆÁØÑÂõ≤: ${Math.min(...vector)} ÔΩû ${Math.max(...vector)}`);
      console.log(`„Éô„ÇØ„Éà„É´„ÅÆ„Éé„É´„É†: ${Math.sqrt(vector.reduce((sum, val) => sum + val * val, 0)).toFixed(3)}`);
      
      // „Çº„É≠„Éô„ÇØ„Éà„É´„Åã„ÉÅ„Çß„ÉÉ„ÇØ
      const isZeroVector = vector.every(val => val === 0);
      console.log(`„Çº„É≠„Éô„ÇØ„Éà„É´: ${isZeroVector ? '‚ö†Ô∏è YES' : '‚úÖ NO'}`);
    }
    
  } catch (error) {
    console.error('„Ç®„É©„Éº:', error.message);
  }
}

testLoginSearch().catch(console.error);
