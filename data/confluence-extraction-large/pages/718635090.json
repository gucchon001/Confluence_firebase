{
  "id": "718635090",
  "title": "051_【FIX】最近見た求人一覧閲覧機能",
  "content": "1. 目次 2. 概要 本機能は、会員が自身が過去に閲覧した一定数の求人情報 【レビュー中】求人閲覧履歴 を、一覧で閲覧するため の機能 です。 3. 要求事項 サービスサイトにログインできる会員のみが本機能を利用することができる。 最近見た求人の求人情報カードには本ページの「要件定義」-「出力」欄（ https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/718635090/051#4.3.-%E5%87%BA%E5%8A%9B ）で出力先として「画面」が定義されている項目の内、求人情報として定義されている項目を表示する。 1ページあたりの表示数を20件とし、表示対象のレコードが21件以上の場合はページネーションと現在のページ数、総ページ数を一覧の上部と下部に表示する。 ページ 上部 下部 には「マイページへ戻る」ボタンを設置し、押下すると、 054_【FIX】マイページTOP に遷移する。 3.1. 権限 サービスサイトにログインできる会員のみ 3.2. 帳票 【レビュー中】求人閲覧履歴 【FIX】求人：基本情報 【FIX】教室：基本情報／所在地 3.4. ワークフロー 3.4.1. 本機能 3.4.2. 関連 4. 要件定義 4.1. ユーザーインターフェース（画面） https://www.figma.com/file/8zITZViFoU0WYNnwig5AKc/%E3%80%90%E5%85%B1%E6%9C%89%E3%80%91%E3%83%88%E3%83%A2%E3%83%8E%E3%82%AB%E3%82%A4%E6%A7%98_%E5%A1%BE?type=design&amp;node-id=49803-28210&amp;mode=design&amp;t=qubH86CTwzxCECKm-0 4.2. 入力 説明は各帳票の記載を前提とし、本ページに固有の特記事項のみ記載する。 項目名 変数名 入力元 説明 制限とエラーメッセージ 1 ユーザー番号 Cookie セッションIDから割り出す 4.3. 出力 説明は各帳票の記載を前提とし、本ページに固有の特記事項のみ記載する。 出力項目 出力先 説明 1 件数 画面 指定されたフィルタリングを適用した結果表示可能なデータの総件数をページ上部に表示する。 2 総ページ数 画面 指定されたフィルタリングを適用した結果の件数に対して1ページあたり 20件 の表示で計算した総ページ数をページ上部に表示する。 3 ページ番号 画面 入力されたページ番号を入力処理にて変換した値をページ上部に表示する。 4 求人情報配列 画面 指定されたフィルタリングを適用してデータベースから抽出した求人情報レコードの配列をページ上に表示する。各レコードの表示データは以下「求人情報：」プレフィックスで始まる出力項目として説明する。 検索項目で絞り込んだ求人情報配列を最大10件表示する。 5 求人情報：スライド画像 画面 データベースから取得した 【FIX】教室：ロゴ・スライド画像 の 「 スライド画像 」 を表示する。 6 求人情報：求人タイトル 画面 データベースから取得した求人情報1レコードの「求人タイトル」を取得し、適切にHTMLエスケープしてテキストリンクとして表示する。押下すると 012_【FIX】求人詳細閲覧機能 に遷移する。 7 求人情報：教室名 画面 データベースから取得した求人情報1レコードの「教室名」を取得し、適切にHTMLエスケープして表示表示する。 8 求人情報：給与 画面 データベースから取得した求人情報1レコードの「給与形態」「給与形態：授業、コマ」「給与：最高時給」「給与：最低時給」を適切にHTMLエスケープして、「[給与形態][給与形態：授業、コマ][給与：最低時給]円〜[給与：最高時給]円」形式で表示する。 9 求人情報：勤務地 画面 データベースから取得した求人情報1レコードの「都道府県」「市区町村」「最寄り駅名：最寄り駅1：駅名」「最寄り駅名：最寄り駅1：移動手段」「最寄り駅名：最寄り駅1：所要時間」を適切にHTMLエスケープして、「[都道府県][市区町村]（[最寄り駅名：最寄り駅1：駅名]より[最寄り駅名：最寄り駅1：移動手段][最寄り駅名：最寄り駅1：所要時間]）形式で表示する。 10 求人情報：指導形態 画面 データベースから取得した求人情報1レコードの「指導形態」を取得し、指導形態選択肢のラベルで表示する。 複数登録されていた際は句読点で連結して全て表示する。 11 求人情報：雇用形態 画面 データベースから取得した求人情報1レコードの「雇用形態」を取得し、雇用形態の選択肢のラベル名を表示する。 12 求人情報：勤務条件 画面 データベースから取得した教室情報1レコードの「勤務条件」「勤務可能最低日数」を取得し、「[勤務条件]／「勤務可能最低日数」）形式で表示する。 「勤務条件」が複数登録されていた際は 句読点 で連結して全て表示する。 13 求人情報：勤務時間 画面 データベースから取得した教室情報1レコードの「勤務時間：平日（開始時間）」「勤務時間：平日（終了時間）」「勤務時間：土曜（開始時間）」「勤務時間：土曜（終了時間）」「勤務時間：日曜（開始時間）」「勤務時間：日曜（終了時間）」を取得し、「[勤務時間：平日（開始時間）]〜[勤務時間：平日（終了時間）]、[勤務時間：土曜（開始時間）]〜[勤務時間：土曜（終了時間）]、[勤務時間：日曜（開始時間）]〜[勤務時間：日曜（終了時間）]」形式で表示する。 登録されていない勤務時間は表示しない。 14 求人情報：求人キープボタン 画面 求人キープボタンを押すとキープ一覧に保存される。 求人IDとuserIDを条件として、データベースから取得した求人キープ状態を表示する。 未登録の場合は白抜きマークが表示され、 登録済みの場合 は塗りつぶされたマークとする。 15 求人情報：閲覧した日付 画面 閲覧した日付をYYYY/MM/DD形式で表示する。 4.4. 処理 ログイン状態を確認し、ログイン認証されていない場合はログイン画面にリダイレクトする。 データベースから条件に合致したレコード（なおここでのレコードとは、 【レビュー中】求人閲覧履歴 のJSONに含まれる「求人番号」と「閲覧日時」の1セットを指しています）の総件数を取得する。 レコードの総件数が100を超えていた場合、以降は総件数を100件として処理を続行する。 レコードの総件数からページ総数を計算し、「ページ番号」の入力がページ総数を超えていた場合、自然数以外を表す文字列だった場合は以降はページ番号=1として処理をおこなう。 レコードの総件数が0件だった場合、データの抽出を実行しないで 0件の最近見た求人閲覧履歴データ配列を生成する。 レコードの総件数が1件以上だった場合、上記の条件をもとにして登録日時の降順に並べて、指定されたページ番号に表示すべき最近見た求人閲覧履歴情報20件のデータをデータベースから抽出する。 出力の章に記載した出力項目をページ表示できるよう整形し、ページを出力する。 4.5. エラー処理 入力処理でエラーは発生させない。 それ以外で発生した例外に関してはフレームワークの例外処理に任せる。 4.6. ログ 一覧を表示した場合に下記フォーマットでログを出力する User {ユーザー番号} read recently viewed job list. page={ページ番号} {アクセスURI} {日時} {アクセス元IPアドレス} {ユーザーエージェント} 5. スコープ外・制限事項 ある求人を最近見た求人リストから削除する機能は提供しない（ユーザーが履歴を削除できない）",
  "parentId": "704577558",
  "parentTitle": "050_■マイページ各種管理機能",
  "labels": [],
  "url": "/spaces/CLIENTTOMO/pages/718635090/051_+FIX",
  "spaceKey": "CLIENTTOMO",
  "lastModified": "2024-02-22T08:25:05.765Z",
  "author": "Norika Sugawara (Unlicensed)",
  "excerpt": "1. 目次 2. 概要 本機能は、会員が自身が過去に閲覧した一定数の求人情報 【レビュー中】求人閲覧履歴 を、一覧で閲覧するため の機能 です。 3. 要求事項 サービスサイトにログインできる会員のみが本機能を利用することができる。 最近見た求人の求人情報カードには本ページの「要件定義」-「出力」欄（ https://giginc.atlassian.net/wiki/spaces/CLIENTT..."
}