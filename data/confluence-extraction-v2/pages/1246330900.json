{
  "id": "1246330900",
  "title": "972_【FIX】記事データ移行バッチ",
  "content": "1. 概要 本バッチプログラムは、トモノカイ社から提供されるCSVファイルとインポート済みのデータから、新システムにおける下記データを作成してデータベースに保存する処理をおこなう。 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 【FIX】記事カスタムフィールド値 【FIX】記事画像 【FIX】記事カテゴリ 【バッチ処理対象外】 ※移行件数が少ない、およびカテゴリはDBでなく設定ファイル形式となるため、バッチ処理の対象外とし、手動で移行するものとする。 【FIX】記事バージョン 2. 要求事項 全般 複数のバッチに分けても良いものとする。 移行した記事のレイアウトが崩れないように、記事デザイン・コーディング内容を把握・調整してインポート時に必要な配慮・変換を行う。 移行前（旧システム）の記事本文編集はTinyMCE（旧版）で行っており、移行後もTinyMCE（最新版）で行うため、記事本文において問題が出ないように調査・配慮を行う。 記事番号および旧システムで関連帳票が存在する帳票のIDは、旧システムの番号・IDを変換せずにそのまま移行する。新システム独自の帳票（旧システムで該当する帳票が存在しない帳票）のデータを移行する場合は、移行時に新たにIDを採番して移行する。 各帳票において、新旧レコード数、IDの対応関係は下記の通りとする。 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 移行元のレコード： https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 ＝1：1として、IDをそのまま移行する。 【FIX】記事カスタムフィールド値 移行元と構造が異なるため、 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 1レコードに対して、 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/1248591874 の項目数分のレコードを生成する。 移行後のIDは、紐付け先の1つの記事番号（ article _id）に対して、 article _id ✕ 10＋1〜 article _id ✕ 10＋9をそれぞれ採番する。（例： https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 の記事番号が3の場合、 【FIX】記事カスタムフィールド値 は番号が31〜39のレコードをそれぞれ作成する） 【FIX】記事画像 移行元のレコード ： 【FIX】記事画像 ＝ 1：1 で生成する。 【FIX】記事カテゴリ 【バッチ処理対象外】 移行元のレコード： 【FIX】記事カテゴリ ＝1：1として、IDをそのまま移行する。 【FIX】記事バージョン 移行元のレコード： 【FIX】記事バージョン ＝1：1として、IDをそのまま移行する。 帳票の依存関係のため、下記の順番でインポートする必要がある。 記事が参照するデータ 記事カテゴリ（ 【FIX】記事カテゴリ ） 【バッチ処理対象外】 画像ファイルと画像テーブル（ 【FIX】記事画像 ） 記事 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 【FIX】記事カスタムフィールド値 記事を参照するデータ 記事バージョン（ 【FIX】記事バージョン ） 実行方法 コマンドラインで実行することができる。 実行時のパラメータで、CSVファイル名を受け取って実行できるものとする。 コマンドを実行する際のコマンドラインオプションで、 CSVファイルを格納しておくフォルダパス を指定することができる。 処理内容 バッチ処理を開始したら、開始した旨のメッセージと現在日時を含むログを出力する。 CSVファイルの存在チェック、構文チェックを行い、結果のログを出力する。 移行データの項目の対応関係、および項目ごとの移行時の変換処理等の内容は後述の新旧データ対応表に従う。 CSVファイルを読み込み、１行ずつ読み込みながら、必要となるインポート済みの情報を収集し、本システムにおける適切なレコードを生成して保存する。 既に該当するレコードが存在する場合は、既存のレコードの値を更新する。 レコード生成処理を実行したら以下の情報が入ったログを出力する。 実行日時、 記事番号 、レコードの生成方法（新規作成、更新）、アクション（成功or失敗）、（更新の場合は）変更前後の値 バッチ処理を終了したら、終了した旨のメッセージと終了日時を含むログを出力する。 処理に失敗した場合、成功した 記事 データ一式はロールバックしないが、失敗した 記事 データの成功データ部分は ロールバックする 。 また、失敗した記事データ以降の処理は継続せずにバッチ処理を終了する。 上記仕様で問題なく処理を実行できる目安となる処理件数は 3,000件 とし、 1時間 以内に最大 3,000件 の処理を行えるパフォーマンスを確保する。 2.1. 前提 本バッチ処理の実行は、事前に下記が完了していることを前提とする。 【FIX】記事カスタムフィールド定義（定義ファイル） が https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/1248591874 の通りに設定されている。 【FIX】全体管理者登録情報 がインポートされている。 【FIX】記事カテゴリ がインポートされている。 下記で参照する画像ファイルが、webp変換されインポートされている。 【FIX】記事画像 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 の「本文」内 【FIX】記事バージョン の「本文」内 下記は移行不要とする。 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/1245544451 記事画像ファイルの格納ディレクトリとファイル名は、 記事画像ファイルの種類と構造 に記載の通り旧システムと新システムで変更されているものとする。 2.2. 記事データ移行フロー 分類 内容 実施方法参照 1 画像ファイル変換・配置 旧システムのサーバーにある画像を、新システムに合わせて変換（ディレクトリ構成・ファイル構成・webp形式）し、新システムのサーバーへ格納する。 記事画像データ移行手順 2 インポート用ファイル配置 インポート用CSVファイルを 新システムへ 配置する。 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/1246330900 3 バッチ実行 記事移行データバッチ（ https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/1246330900 ）を実行する。 2.3. 新旧データ対応表 https://docs.google.com/spreadsheets/d/1hGhCzYGJ4jV80iKHy-67408pza9CaFHUPDz0EEnZd_c/edit?gid=179419041#gid=179419041 ※項目ごとに必要な変換処理も記載されている。 2.4. 旧システムサンプルデータ https://drive.google.com/drive/folders/1byP4nMj34fl_o7fRkzd6Ml-Vi5CbfRDL 3. 要件定義 3.1. 入力 3.2. 出力 3.3. 処理 3.4. エラー処理 3.5. ログ バッチ略称はimport article (I A ) とする。 バッジ処理全体が開始した時と終了した時に以下のログを出力する。 開始時 [972_I A ] started at {処理開始日時}. 終了時 [972_I A ] finished at {処理終了日時}. 各行のレコード追加・更新時に以下のログを出力する。 成功時 [972_I A ] [created / updated] article . file_name={インポートファイル名} row_number={CSV行番号} article _id={記事番号} [項目名]=[変更前],[変更後] ※更新時のみ [項目名]=[変更前],[変更後] ※更新時のみ ・・・ time={現在日時} . 失敗時 [972_I A ] failed to [create / update] article . file_name={インポートファイル名} row_number={CSV行番号} field_name={失敗したCSVの列名} reason={失敗理由} time={現在日時} . 失敗理由については妥当性検査にてエラーになった理由を文章にして出力する。 3.6. 制限事項（スコープ外） 3.7. 参考 開発済みの他データの移行バッチ実行コマンド： https://docs.google.com/spreadsheets/d/1d4G6pJ6JicI98cp_l_YpL_ObPdwCQ-JySHyuLrdcMbM/edit?gid=0#gid=0",
  "parentId": "1022853139",
  "parentTitle": "970_■記事・バナー",
  "labels": [],
  "url": "/spaces/CLIENTTOMO/pages/1246330900/972_+FIX",
  "spaceKey": "CLIENTTOMO",
  "lastModified": "2024-11-28T05:30:21.198Z",
  "author": "ejiri_yusuke",
  "excerpt": "1. 概要 本バッチプログラムは、トモノカイ社から提供されるCSVファイルとインポート済みのデータから、新システムにおける下記データを作成してデータベースに保存する処理をおこなう。 https://giginc.atlassian.net/wiki/spaces/CLIENTTOMO/pages/682557639 【FIX】記事カスタムフィールド値 【FIX】記事画像 【FIX】記事カテゴリ 【..."
}